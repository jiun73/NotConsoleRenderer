@0
MOV RIGHT ACC
JEZ E
MOV ACC DOWN
JRO -999
E:MOV 5 ACC
L:JEZ LE
SUB 1
MOV -1 DOWN
JMP L
LE:MOV -2 DOWN

@1
MOV UP LEFT
#EACH NODE STORES
#A VALUE, IF IT
#GETS A VALUE BUT
#IS ALREADY FULL
#THEN IT SEND IT'S
#VALUE TO THE NEXT
#NODE
#-1 IS THE MESSAGE
#TO GET THE VALUE
#OF THE PREVIOUS
#NODE, THIS THEN
#CAUSES A CHAIN
#REACTION THAT
#MOVES VALUES BY 1

@2
#WE SEND -1 ENOUGH
#TIMES TO EMPTY
#ALL THE NODES
#THEN WE SEND -2
#TO TELL THE LAST
#NODE TO SEND 0
#DOWN

##NO MEMORY NODES
#WELL NO ACTUALLY
#INSTEAD OF USING
#THE NORMAL ONES

#I WROTE MY OWN
# :)

@3
MOV UP ACC
JLZ END
SWP
JGZ TAKEN
SWP
SAV
JRO -999
TAKEN:SWP
MOV ACC RIGHT
JRO -999
END:MOV ACC RIGHT
MOV RIGHT ACC
SWP
MOV ACC RIGHT

@4
MOV LEFT ACC
JLZ END
SWP
JGZ TAKEN
SWP
SAV
JRO -999
TAKEN:SWP
MOV ACC RIGHT
JRO -999
END:MOV ACC RIGHT
MOV RIGHT ACC
SWP
MOV ACC RIGHT
MOV 0 LEFT

@5
MOV LEFT ACC
JLZ END
SWP
JGZ TAKEN
SWP
SAV
JRO -999
TAKEN:SWP
MOV ACC RIGHT
JRO -999
END:MOV ACC RIGHT
MOV RIGHT ACC
SWP
MOV ACC RIGHT
MOV 0 LEFT

@6
MOV LEFT ACC
JLZ END
SWP
JGZ TAKEN
SWP
SAV
JRO -999
TAKEN:SWP
MOV ACC DOWN
JRO -999
END:MOV ACC DOWN
MOV DOWN ACC
SWP
MOV ACC DOWN
MOV 0 LEFT

@7
S:MOV RIGHT ACC
JEZ S
JLZ COMP
MOV ACC DOWN
JRO -999
COMP:ADD 2
JEZ END
MOV 0 RIGHT
JRO -999
END:MOV 0 RIGHT
MOV 0 DOWN

@8
MOV UP ACC
JLZ END
SWP
JGZ TAKEN
SWP
SAV
JRO -999
TAKEN:SWP
MOV ACC LEFT
JRO -999
END:MOV ACC LEFT
MOV LEFT ACC
SWP
MOV ACC LEFT
MOV 0 UP