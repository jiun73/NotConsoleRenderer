new vector(AnimationX) animations
new vector(string) animation_names
new vector(string) paths
new int current_frame = 0
new int current_animation = 0
new int current_image = 0

new function :curanim = 
{
	{animations -at current_animation}
}

new function :curframe = 
{
	:curanim .frames -at current_frame
}

new init setup = {
	BASE .fit = :true;
}

new function :load_images = 
{
	new vector(string) files;
	files = $file;
	new int index;
	index = 0;

	$while {index /- files -size} {
		:get_tex files -at index;
		paths -push files -at index;
		index ++;
	};
}

new function :has_image = { 0 /- paths -size }
new function :has_anim = { 0 /- animations -size }
new function :animation_size =  { :curanim .frames -size }

new function :has_frames = 
{
	$if :has_anim  
	{
		return { { :curanim .frames -size } /+ 0 } 
	};
	:false;
}

new function :has_textures = 
{
	$if :has_anim 
	{
		return { { :curanim .textures -size } /+ 0 }
	};
	:false;
}

new function :add_frame =
{
	arg string path;
	arg* AnimationX anim;

	$if { :not {anim @} .textures -has :get_tex path }
	{
		 {anim @} .textures -push :get_tex path ;
	};

	new int pos = 0;

	pos = { anim @ } .textures -find :get_tex path;

	new AnimationFrameX frame;

	frame .tex = (size_t) pos;
	frame .time = (u32) 100;

	{ anim @ } .frames -push frame;
}

new function :set_origins_ratio = {
	arg double ratioY;
	arg double ratioX;

	new int i;
	i = 0;
	$foreach { :curanim .frames }
	{
		new V2d_i tex_size;
		tex_size = :get_tex_sz { :curanim .textures -at (size_t-int) { :curanim .frames -at i } .tex };
		{ :curanim .frames -at i } .origin .x = (~) ratioX !* (.) tex_size .x ;
		{ :curanim .frames -at i } .origin .y = (~) ratioY !* (.) tex_size .y;
		i ++;
	};
}

ROW SIZE 30 CFIT <
	
	COL SIZE 120 BUTTON { "Load images" } { :load_images } <>
	COL SIZE 900 DROPBOX {paths} {current_image} <>
	//COL SIZE 120 IF { :has_anim } 
	//BUTTON { "Add image" } 
	//{
	//	{ {animations -at current_animation} .textures} -push {:get_tex paths -at current_image};
	//	:cout {"Image added (" { {animations -at current_animation} .textures -size } ")"};
	//} <>
>

ROW SIZE 30 <
	new bool makingAnim = false 

	COL SIZE 140 IF { :not makingAnim }	BUTTON	{"New Animation"}	{ makingAnim = :true } <>
	COL SIZE 170 IF { :not makingAnim } DROPBOX {animation_names} {current_animation} <>
	COL SIZE 140 IF { makingAnim }		TEXTBOX {"Enter name..."}	
	{ 
		arg* string text; 

		new AnimationX new_anim;
		animation_names -push {text @};
		animations -push new_anim;

		:cout { "Added " {text @} " animation" };

		makingAnim = :false; 
		{text @} = ""; 
	} 
	<>
	COL SIZE 140 IF { makingAnim }		BUTTON	{"Cancel"}			{ makingAnim = :false } <>

	COL SIZE 150 IF { :has_anim :and :has_image } BUTTON { "Add frame" } 
			{
				{ & :curanim } :add_frame paths -at current_image;
			} <>

	COL SIZE 150 IF { :has_anim :and :has_image } BUTTON { "Add all images" } 
	{
		new int i;
		i = 0;
		$foreach paths 
		{
			{ & :curanim } :add_frame paths -at i;
			i ++;
		};
		
	} <>

	COL CFIT <
		ROW SIZE 30 IF { :has_frames } <
			COL SIZE 70 TEXT { current_frame " / " 1 `- :animation_size } <>

			COL SIZE 40 BUTTON { "Prev" }  
			{
				$if {current_frame /+ 0} {current_frame --}
			} <>

			COL SIZE 40 BUTTON { "Next" }  
			{
				$if {current_frame /-  1 `- :animation_size } 
				{current_frame ++}
			} <>
		>
	>
>

ROW SIZE 800 CFIT  <
	COL SIZE 4 IF { :has_frames } FRAME_CREATOR { :curanim } { :curframe } <>

	new bool state = false

	COL CFIT SIZE 1 CFIT IF { :has_frames } 
	<
		ROW ANIMATION_PREVIEW { :curanim } <>
		ROW CFIT < COL CFIT < 
			ROW TEXT { "Size: " :get_tex_sz { :curanim .textures -at (size_t-int) :curframe .tex } } <>
			ROW TEXTBOX { "Origin: " :curframe .origin } { 
				arg* string text; 
				:curframe .origin #= @ text;
				{text @} = ""; 
			} <> 
			ROW TEXTBOX { "Speed: " :curframe .time } { 
				arg* string text; 
				:curframe .time #= @ text;
				{text @} = ""; 
			} <>
			ROW IF { :not state } BUTTON { "More... " } { state = :true; } <>
			ROW IF { state } BUTTON { "Close" } { state = :false; } <>
			ROW IF { state } BUTTON { "Copy settings to all frames" } 
			{
				new int i;
				i = 0;
				$foreach { :curanim .frames }
				{
					{ :curanim .frames -at i } .origin = :curframe .origin;
					i ++;
				};
			} <>

			new double ZERO = 0
			new double HALF = 0.5
			new double ONE = 1

			ROW CFIT IF { state }
			<
				COL BUTTON { "*" } { :set_origins_ratio ZERO ZERO } <>
				COL BUTTON { "*" } { :set_origins_ratio HALF ZERO } <>
				COL BUTTON { "*" } { :set_origins_ratio ONE ZERO } <>
			>

			ROW CFIT IF { state }
			<
				COL BUTTON { "*" } { :set_origins_ratio ZERO HALF } <>
				COL BUTTON { "*" } { :set_origins_ratio HALF HALF } <>
				COL BUTTON { "*" } { :set_origins_ratio ONE HALF } <>
			>

			ROW CFIT IF { state }
			<
				COL BUTTON { "*" } { :set_origins_ratio ZERO ONE } <>
				COL BUTTON { "*" } { :set_origins_ratio HALF ONE } <>
				COL BUTTON { "*" } { :set_origins_ratio ONE ONE } <>
			>
		>>

	>
>

